using System;
using Autofac;

namespace AutofacFactoryExamples.ResolveActions
{
    public class FuncResolveAction : IResolveAction
    {
        public void Execute(ILifetimeScope container)
        {
            // -------------------------------------------------------------------------------------
            // Note: When executing a Func<> generated by Autofac, the parameters are determined
            //       by type.  This means that Func<> types declared with multiple parameters 
            //       which share the same type would throw an exception as Autofac would not be
            //       able to determine which parameter should receive which value.
            //
            //       Error Example: container.Resolve<Func<string, uint, uint, Shareholding>>();
            // -------------------------------------------------------------------------------------
            //var shareholdingFactory = container.Resolve<Func<string, uint, uint, Shareholding>>();
            var shareholdingFactory = container.Resolve<Func<string, uint, Shareholding>>();
            Console.WriteLine($"factory(\"ABC\", 1234): Id: {shareholdingFactory("ABC", 1234).Id}");
            Console.WriteLine($"factory(\"ABC\", 1234): Id: {shareholdingFactory("ABC", 1234).Id}");
            Console.WriteLine($"factory(\"DEF\", 5678): Id: {shareholdingFactory("DEF", 5678).Id}");
        }
    }
}